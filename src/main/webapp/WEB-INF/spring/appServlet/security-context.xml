<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- <context:component-scan base-package="kosta.ggari.postIT,kosta.spring.postIT" /> -->
	<context:component-scan
    base-package="kosta.spring.postIT.model,kosta.spring.postIT.security.handler,kosta.spring.postIT.security.provider,kosta.spring.postIT.down" />

	<bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder" />

	<!-- 기존의 강의내용을 바탕으로 로그인과 로그아웃 인증처리를 해주십쇼! -->
	<security:http auto-config="true" use-expressions="true">
	<security:intercept-url pattern="/join/mento" access="hasRole('ROLE_MENTO')"/>
	<!-- <security:intercept-url pattern="/member/main" access="isAuthenticated()"/> -->
	<security:intercept-url pattern="/myPage/**" access="isAuthenticated()"/>
	
	<security:form-login
	  login-page="/loginForm"
	  login-processing-url="/loginCheck"
	  username-parameter="userId"  
	  password-parameter="password"   
	  default-target-url="/"
	  authentication-failure-handler-ref="memberAuthenticationFailureHandler"
	/>
	<security:logout 
	 invalidate-session="true"
	 delete-cookies="JSESSIONID"
	 logout-success-url="/" 
	 logout-url="/member/logout" />
	   
	</security:http>
	
	<security:authentication-manager>
	  <security:authentication-provider  ref="memberAuthenticationProvider"/>
	    
	</security:authentication-manager>
</beans>







